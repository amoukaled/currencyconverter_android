/* Copyright (C) 2021  Ali Moukaled
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

// Loads the app props
def appPropsFile = file('app.properties')
Properties appProps = new Properties()
if (appPropsFile.canRead()) {
    appProps.load(new FileInputStream(appPropsFile))
}
def accessKey = appProps['ACCESS_KEY']
def admobAppId = appProps["ADMOB_APP_ID"]
def bannerId = appProps["BANNER_ID"]
def apiUrl = appProps['API_URL']

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.abstraktlabs.currencyconverter"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 2
        versionName "1.0"

        // Manifest variables
        manifestPlaceholders = [ADMOB_APP_ID: "$admobAppId"]

        // Build variables
        buildConfigField "String", "API_KEY", "\"$accessKey\""
        buildConfigField "String", "API_URL", "\"$apiUrl\""

        // String resource for bannerId
        resValue('string', 'banner_id', "$bannerId")

        testInstrumentationRunner "com.abstraktlabs.currencyconverter.HiltTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }
}

dependencies {
    def lifecycle_version = "2.3.1"
    def room_version = "2.3.0"


    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$hilt_version"
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-compiler:$hilt_version"

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.squareup.okhttp3:okhttp:4.9.0"

    // Truth
    testImplementation "com.google.truth:truth:1.1.2"
    androidTestImplementation "com.google.truth:truth:1.1.2"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.fragment:fragment-ktx:1.3.3"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    // Coroutine test
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.3'
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.3'
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3'

    // Arch core
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"

    // ADMOB
    implementation 'com.google.android.gms:play-services-ads:20.1.0'
}